{"id":"../../../node_modules/@ds.e/react/lib/molecules/Select/Select.js","dependencies":[{"name":"/Users/vanessabautista/ds.e/node_modules/@ds.e/react/lib/molecules/Select/Select.js.map","includedInParent":true,"mtime":1680291882646},{"name":"/Users/vanessabautista/ds.e/playgrounds/react/package.json","includedInParent":true,"mtime":1678826484503},{"name":"/Users/vanessabautista/ds.e/node_modules/@ds.e/react/package.json","includedInParent":true,"mtime":1677162702518},{"name":"react","loc":{"line":1,"column":62,"index":62},"parent":"/Users/vanessabautista/ds.e/node_modules/@ds.e/react/lib/molecules/Select/Select.js","resolved":"/Users/vanessabautista/ds.e/node_modules/react/index.js"},{"name":"../../atoms/Text/Text.js","loc":{"line":2,"column":17,"index":88},"parent":"/Users/vanessabautista/ds.e/node_modules/@ds.e/react/lib/molecules/Select/Select.js","resolved":"/Users/vanessabautista/ds.e/node_modules/@ds.e/react/lib/atoms/Text/Text.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _Text = _interopRequireDefault(require(\"../../atoms/Text/Text.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst getNextOptionIndex = (currentIndex, options) => {\n  console.log(currentIndex);\n  if (currentIndex === null) {\n    return 0;\n  }\n  if (currentIndex === options.length - 1) {\n    return 0;\n  }\n  return currentIndex + 1;\n};\nconst getPreviousOptionIndex = (currentIndex, options) => {\n  if (currentIndex === null) {\n    return options.length - 1;\n  }\n  if (currentIndex === 0) {\n    return 0;\n  }\n  return currentIndex - 1;\n};\nconst Select = ({\n  options = [],\n  label = \"Please select an option\",\n  onOptionSelected\n  //renderOption,\n}) => {\n  const [isOpen, setIsOpen] = (0, _react.useState)(false);\n  const [selectedIndex, setSelectedIndex] = (0, _react.useState)(null);\n  const [highlightedIndex, setHighlightedIndex] = (0, _react.useState)(null);\n  const labelRef = (0, _react.useRef)(null);\n  const [optionRefs, setOptionRefs] = (0, _react.useState)([]);\n  const [overlayTop, setOverlayTop] = (0, _react.useState)(0);\n  const handleOptionSelected = (option, optionIndex) => {\n    setIsOpen(prev => !prev);\n    onOptionSelected?.(option, optionIndex);\n    setSelectedIndex(optionIndex);\n    console.log(selectedIndex);\n  };\n  const onLabelClick = () => {\n    setIsOpen(prev => !prev);\n  };\n  (0, _react.useEffect)(() => {\n    setOverlayTop((labelRef.current?.offsetHeight || 0) + 10);\n  }, [labelRef.current?.offsetHeight]);\n  let selectedOption = null;\n  if (selectedIndex !== null) {\n    selectedOption = options[selectedIndex];\n  }\n  const highlightOption = optionIndex => {\n    setHighlightedIndex(optionIndex);\n  };\n  const onButtonKeyDown = event => {\n    event.preventDefault();\n    console.log(event);\n    // space is not working\n    if (event.key === \"Enter\" || event.key === \"Space\" || event.key === \"ArrowDown\") setIsOpen(true);\n    // Set focus on list item\n    highlightOption(0);\n  };\n  (0, _react.useEffect)(() => {\n    setOptionRefs(options.map(_ => (0, _react.createRef)()));\n  }, [options.length]);\n  (0, _react.useEffect)(() => {\n    if (highlightedIndex !== null && isOpen) {\n      const ref = optionRefs[highlightedIndex];\n      if (ref && ref.current) {\n        ref.current.focus();\n      }\n    }\n  }, [isOpen, highlightedIndex]);\n  const onOptionKeyDown = event => {\n    console.log(event);\n    if (event.key === \"Escape\") {\n      setIsOpen(false);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      highlightOption(getNextOptionIndex(highlightedIndex, options));\n    }\n    if (event.key === \"ArrowUp\") {\n      highlightOption(getPreviousOptionIndex(highlightedIndex, options));\n    }\n    if (event.key === \"Enter\") {\n      handleOptionSelected(options[highlightedIndex], highlightedIndex);\n    }\n  };\n  return _react.default.createElement(\"div\", {\n    className: \"dse-select\"\n  }, _react.default.createElement(\"button\", {\n    ref: labelRef,\n    className: \"dse-select__label\",\n    onClick: () => onLabelClick(),\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen ? true : undefined,\n    \"aria-controls\": \"dse-select-list\",\n    onKeyDown: onButtonKeyDown\n  }, _react.default.createElement(_Text.default, null, selectedOption === null ? label : selectedOption.label), _react.default.createElement(\"svg\", {\n    className: `dse-select__caret ${isOpen ? \"dse-select__caret--open\" : \"dse-select__caret--closed\"}`,\n    width: \"1rem\",\n    height: \"1rem\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\"\n  }, _react.default.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n  }))), isOpen && _react.default.createElement(\"ul\", {\n    id: \"dse-select-list\",\n    role: \"menu\",\n    style: {\n      top: overlayTop\n    },\n    className: \"dse-select__overlay\"\n  }, options.map((option, index) => {\n    // selectedIndex is the same as optionIndex\n    const isSelected = index === selectedIndex;\n    const isHighlighted = highlightedIndex === selectedIndex;\n    const ref = optionRefs[index];\n    // const renderOptionProps = {\n    //   option,\n    //   isSelected,\n    //   getOptionRecommendedProps: (overrideProps = {}) => {\n    //     return {\n    //       ref,\n    //       onKeyDown: onOptionKeyDown,\n    //       tabIndex: isHighlighted ? -1 : 0,\n    //       onMouseEnter: () => highlightOption(selectedIndex),\n    //       onMouseLeave: () => highlightOption(null),\n    //       className: `dse-select__option\n    //      ${isSelected ? \"dse-select__option--selected\" : \"\"}\n    //      ${isHighlighted ? \"dse-select__option--highlighted\" : \"\"}`,\n    //       key: option.value,\n    //       onClick: handleOptionSelected(option, index),\n    //       ...overrideProps,\n    //     };\n    //   },\n    // };\n    // if (renderOption) {\n    //   return renderOption(renderOptionProps);\n    // }\n    return _react.default.createElement(\"li\", {\n      ref: ref,\n      role: \"menuitemradio\",\n      \"aria-label\": option.label,\n      \"aria-checked\": isSelected ? true : undefined,\n      className: `dse-select__option ${isSelected ? \"dse-select__option--selected\" : \"\"}`,\n      key: option.value,\n      onClick: () => {\n        handleOptionSelected(option, index);\n      },\n      onKeyDown: onOptionKeyDown,\n      tabIndex: isHighlighted ? -1 : 0,\n      onMouseEnter: () => highlightOption(selectedIndex),\n      onMouseLeave: () => highlightOption(null)\n    }, _react.default.createElement(_Text.default, null, option.label), isSelected ? _react.default.createElement(\"svg\", {\n      width: \"1rem\",\n      height: \"1rem\",\n      fill: \"none\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.5,\n      viewBox: \"0 0 24 24\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-hidden\": \"true\"\n    }, _react.default.createElement(\"path\", {\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      d: \"M4.5 12.75l6 6 9-13.5\"\n    })) : null);\n  })));\n};\nexports.default = Select;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"f488068d0a4ad7ca07a4fe9d11fa985c","cacheData":{"env":{}}}